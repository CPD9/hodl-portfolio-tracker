import { NextResponse } from 'next/server';
import { headers } from 'next/headers';

export const dynamic = 'force-dynamic';

export async function GET() {
  // Get the request URL to determine the base URL
  const headersList = await headers();
  const host = headersList.get('host') || 'hodl-portfolio-tracker.vercel.app';
  const protocol = host.includes('localhost') ? 'http' : 'https';
  const baseUrl = `${protocol}://${host}`;
  
  const manifest = {
    // Account Association - Will be generated by Base Build tool
    // Leave empty initially, then fill with values from Base Build after verification
    accountAssociation: {
      header: "",
      payload: "",
      signature: ""
    },
    
    // Base Builder - Your wallet address used when importing
    // Basename: cpd99.base.eth
    baseBuilder: {
      ownerAddress: "0x55345C8B7F6Fcd3b7366bE7A941C02e2003B2F52",
      networkId: 84532,
      networkName: "base-sepolia"
    },
    
    // Identity & Launch (REQUIRED)
    version: "1",
    name: "HODL Portfolio Tracker",
    homeUrl: `${baseUrl}/miniapp`,
    iconUrl: `${baseUrl}/favicon.ico`,
    
    // Loading Experience (REQUIRED)
    splashImageUrl: `${baseUrl}/favicon.ico`,
    splashBackgroundColor: "#0F0F0F",
    
    // Discovery & Search (REQUIRED)
    primaryCategory: "finance",
    tags: ["portfolio", "crypto", "stocks", "trading", "base"],
    
    // Display Information (Optional but recommended)
    subtitle: "Unified Stock & Crypto Tracker",
    description: "Track stocks and crypto together. Execute cross-asset swaps on Base Sepolia. Built for START HACK 2025 with proof of reserves and AI-powered insights.",
    tagline: "Your Unified Portfolio on Base",
    heroImageUrl: `${baseUrl}/api/frame/portfolio/image`,
    screenshotUrls: [],
    
    // Embeds & Social Sharing (Optional)
    ogTitle: "HODL - Portfolio Tracker on Base",
    ogDescription: "Unified stock and crypto portfolio tracker with cross-asset swaps",
    ogImageUrl: `${baseUrl}/api/frame/portfolio/image`,
  };

  return NextResponse.json(manifest, {
    headers: {
      'Content-Type': 'application/json',
      'Cache-Control': 'public, max-age=300', // Cache for 5 minutes
      'Access-Control-Allow-Origin': '*',
      'Access-Control-Allow-Methods': 'GET, OPTIONS',
      'Access-Control-Allow-Headers': 'Content-Type',
    },
  });
}

export async function OPTIONS() {
  return new NextResponse(null, {
    status: 200,
    headers: {
      'Access-Control-Allow-Origin': '*',
      'Access-Control-Allow-Methods': 'GET, OPTIONS',
      'Access-Control-Allow-Headers': 'Content-Type',
    },
  });
}

